cd /Users/danielsamuel/PycharmProjects/recipe-ai-harmony/backend && python -c "
from services.subscription_service import SubscriptionService
from datetime import datetime, timedelta, timezone
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Test the subscription service
service = SubscriptionService()

# Update the subscription to be active again for testing
test_user_id = 'cd9d8fed-6e82-4831-9890-99c87a2eb8cc'
subscription_id = '64e52b72-a03a-4fdb-8b6a-018339b17df5'

print(f'🧪 Creating new active subscription for user: {test_user_id}')

# Set end date to 5 minutes from now
now = datetime.now(timezone.utc)
end_time = now + timedelta(minutes=1)

print(f'📅 Current time: {now}')
print(f'📅 Subscription will expire at: {end_time}')

# Update the subscription
update_result = service.supabase.table('user_subscriptions').update({
    'current_period_start': now.isoformat(),
    'current_period_end': end_time.isoformat(),
    'status': 'active',
    'updated_at': now.isoformat()
}).eq('id', subscription_id).execute()

if update_result.data:
    print(f'✅ Created active subscription for 5 minutes')
    print(f'   Start: {now}')
    print(f'   End: {end_time}')
    
    # Test the subscription status
    print('\\n🔍 Testing subscription status...')
    status_result = service.get_user_subscription_status(test_user_id)
    print(f'📊 Status: {status_result[\"data\"][\"can_access_app\"]}')
    print(f'📊 Has active subscription: {status_result[\"data\"][\"has_active_subscription\"]}')
    if status_result['data']['subscription']:
        print(f'📊 End date: {status_result[\"data\"][\"subscription\"][\"end_date\"]}')
else:
    print('❌ Failed to create subscription')
"